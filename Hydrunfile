#!/bin/bash

set -e

# Test
if [ "$1" = "test" ]; then
    # Install native dependencies
    apt update
    apt install -y docker.io

    # Generate dependencies
    make depend

    # Run tests
    make test

    exit 0
fi

# Go
if [ "$1" = "go" ]; then
    # Install native dependencies
    apt update
    apt install -y curl make docker.io

    # Install bagop
    curl -L -o /tmp/bagop "https://github.com/pojntfx/bagop/releases/latest/download/bagop.linux-$(uname -m)"
    install /tmp/bagop /usr/local/bin

    # Generate dependencies
    make depend

    # Build
    CGO_ENABLED=0 bagop -j "$(nproc)" -b wrtcsgl -x '(android/*|ios/*)' -p 'make build/wrtcsgl DST=$DST' -d out
    CGO_ENABLED=0 bagop -j "$(nproc)" -b wrtcchat -x '(android/*|ios/*)' -p 'make build/wrtcchat DST=$DST' -d out
    CGO_ENABLED=0 bagop -j "$(nproc)" -b wrtcmgr -x '(android/*|ios/*)' -p 'make build/wrtcmgr DST=$DST' -d out
    CGO_ENABLED=0 bagop -j "$(nproc)" -b wrtctkn -x '(android/*|ios/*)' -p 'make build/wrtctkn DST=$DST' -d out
    CGO_ENABLED=0 bagop -j "$(nproc)" -b wrtceth -x '(android/*|ios/*)' -p 'make build/wrtceth DST=$DST' -d out

    exit 0
fi

# gccgo
if [ "$1" = "gccgo" ]; then
    # Install native dependencies
    apt update
    apt install -y curl docker.io

    # Install bagccgop
    curl -L -o /tmp/bagccgop "https://github.com/pojntfx/bagccgop/releases/latest/download/bagccgop.linux-$(uname -m)"
    install /tmp/bagccgop /usr/local/bin

    # Build
    GOFLAGS='-gccgoflags=-static' bagccgop -x '(linux/alpha|linux/mipsle|linux/arm$|linux/arm64|linux/386|linux/amd64|linux/s390x|linux/ppc64|linux/riscv64|linux/mips64|linux/ppc64le)' -j1 -b wrtcsgl -n -s 'make' -p 'make build/wrtcsgl DST=$DST' -d out
    GOFLAGS='-gccgoflags=-static' bagccgop -x '(linux/alpha|linux/mipsle|linux/arm$|linux/arm64|linux/386|linux/amd64|linux/s390x|linux/ppc64|linux/riscv64|linux/mips64|linux/ppc64le)' -j1 -b wrtcchat -n -s 'make' -p 'make build/wrtcchat DST=$DST' -d out
    GOFLAGS='-gccgoflags=-static' bagccgop -x '(linux/alpha|linux/mipsle|linux/arm$|linux/arm64|linux/386|linux/amd64|linux/s390x|linux/ppc64|linux/riscv64|linux/mips64|linux/ppc64le)' -j1 -b wrtcmgr -n -s 'make' -p 'make build/wrtcmgr DST=$DST' -d out
    GOFLAGS='-gccgoflags=-static' bagccgop -x '(linux/alpha|linux/mipsle|linux/arm$|linux/arm64|linux/386|linux/amd64|linux/s390x|linux/ppc64|linux/riscv64|linux/mips64|linux/ppc64le)' -j1 -b wrtctkn -n -s 'make' -p 'make build/wrtctkn DST=$DST' -d out
    GOFLAGS='-gccgoflags=-static' bagccgop -x '(linux/alpha|linux/mipsle|linux/arm$|linux/arm64|linux/386|linux/amd64|linux/s390x|linux/ppc64|linux/riscv64|linux/mips64|linux/ppc64le)' -j1 -b wrtceth -n -s 'make' -p 'make build/wrtceth DST=$DST' -d out

    exit 0
fi
